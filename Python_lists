A Python list is like a container that can hold multiple items. Imagine you have a box, and inside that box, you can keep different things like books, toys, or even other smaller boxes. A list in Python is similar to thatâ€”it can hold different values, which we call "elements."

Key Features of a Python List:
Ordered: The items in a list have a specific order. This means the position of each item is important. For example, in a list like ["apple", "banana", "cherry"], "apple" is the first item, "banana" is the second, and so on.

Changeable: You can change, add, or remove items from a list after it has been created. This makes lists very flexible.

Allows Duplicates: A list can have more than one item with the same value. For example, ["apple", "banana", "apple"] is a valid list.

Can Contain Different Data Types: A list can hold different kinds of data. You can mix strings, numbers, and even other lists together.

1. An empty list
empty_list = []

2.A list of strings
fruits = ["apple", "banana", "cherry"]

3. A list of integers
numbers = [1, 2, 3, 4, 5]

4. A list with mixed data types
mixed_list = [1, "apple", 3.5, True]


5. Accessing elements of a list
fruits = ["apple", "banana", "cherry"]

print(fruits[0])  # Output: apple
print(fruits[1])  # Output: banana
print(fruits[2])  # Output: cherry

6. Modifying a list

fruits = ["apple", "banana", "cherry"]

Changing the second item (index 1)
fruits[1] = "blueberry"

print(fruits)  # Output: ["apple", "blueberry", "cherry"]

7. Adding items to the list

Using append(): Adds an item to the end of the list.

fruits = ["apple", "banana", "cherry"]
fruits.append("orange")
print(fruits)  # Output: ["apple", "banana", "cherry", "orange"]

Using insert(): Adds an item at a specified position.
fruits = ["apple", "banana", "cherry"]
fruits.insert(1, "orange")
print(fruits)  # Output: ["apple", "orange", "banana", "cherry"]

Using extend(): Adds multiple items to the end of the list.
fruits = ["apple", "banana", "cherry"]
more_fruits = ["mango", "pineapple"]
fruits.extend(more_fruits)
print(fruits)  # Output: ["apple", "banana", "cherry", "mango", "pineapple"]

8.Removing Items from a List

Using remove(): Removes the first occurrence of a specified item.
fruits = ["apple", "banana", "cherry", "banana"]
fruits.remove("banana")
print(fruits)  # Output: ["apple", "cherry", "banana"]

Using pop(): Removes the item at a specified position (or the last item if no position is specified).
fruits = ["apple", "banana", "cherry"]
fruits.pop(1)
print(fruits)  # Output: ["apple", "cherry"]

Removing the last item
fruits.pop()
print(fruits)  # Output: ["apple"]

Using clear(): Removes all items from the list.
fruits.clear()
print(fruits) #Output: []


9. Looping Through a List

fruits = ["apple", "banana", "cherry"]

for fruit in fruits:
    print(fruit)


10. List Length

fruits = ["apple", "banana", "cherry"]
print(len(fruits))  # Output: 3


11. Checking the presence of items in a list:
fruits = ["apple", "banana", "cherry"]

if "banana" in fruits:
    print("Banana is in the list!")
else:
    print("Banana is not in the list.")

11. slicing a list

fruits = ["apple", "banana", "cherry", "date", "elderberry"]

# Get items from index 1 to 3 (excluding index 3)
print(fruits[1:3])  # Output: ["banana", "cherry"]

# Get items from the start to index 2 (excluding index 2)
print(fruits[:2])  # Output: ["apple", "banana"]

# Get items from index 2 to the end
print(fruits[2:])  # Output: ["cherry", "date", "elderberry"]


12. fruits = ["apple", "banana", "cherry"]

# Using copy()
new_fruits = fruits.copy()
print(new_fruits)  # Output: ["apple", "banana", "cherry"]

# Using slicing
new_fruits = fruits[:]
print(new_fruits)  # Output: ["apple", "banana", "cherry"]

13. Sorting a List
You can sort a list using the sort() method.

fruits = ["cherry", "apple", "banana"]
fruits.sort()
print(fruits)  # Output: ["apple", "banana", "cherry"]

# Sort in reverse order
fruits.sort(reverse=True)
print(fruits)  # Output: ["cherry", "banana", "apple"]


14. Combining lists
list1 = ["a", "b", "c"]
list2 = [1, 2, 3]

combined_list = list1 + list2
print(combined_list)  # Output: ["a", "b", "c", 1, 2, 3]

Exercise 1: Create and Access Lists
Create a list called colors that contains the following strings: "red", "green", "blue", and "yellow".
Print the first item in the colors list.
Print the last item in the colors list using negative indexing.
Modify the second item in the list to "purple" and print the updated list.

Exercise 2:Create a list of numbers called numbers that contains [5, 3, 8, 6, 7, 2].
Sort the list in ascending order and print it.
Reverse the order of the list and print it.
Find and print the length of the list.
Use list slicing to print the first three items in the list.

numbers=[5, 3, 8, 6, 7, 2]
numbers.sort()
print(numbers)
numbers.sort(reverse=True)
print(numbers)
length=len(numbers)
print(length)
digits=numbers[0:3]
print(digits)

Exercise 3:Create a list of fruits: ["apple", "banana", "mango", "orange", "grape"].
Use a for loop to print each fruit in the list.
Inside the loop, print "I like" followed by each fruit. For example, "I like apple".
Use an if statement inside the loop to print "I love mango!" when the fruit is "mango".
fruits= ["apple", "banana", "mango", "orange", "grape"]
for fruit in fruits:
    #print(fruit)
    print('I like ', fruit)

fruits= ["apple", "banana", "mango", "orange", "grape"]
for fruit in fruits:
    #print(fruit)
    #print('I like ', fruit)
    if fruit=='mango':
        print('I Love Mango')


Exercise 4:Create a 4x4 matrix with the following values:
[[1, 2, 3, 4],
 [5, 6, 7, 8],
 [9, 10, 11, 12],
 [13, 14, 15, 16]]
Access and print the value 10 from the matrix.

Change the value 15 to 0 in the matrix and print the updated matrix.

Print the third row of the matrix.

Use a loop to print each element of the first column.


matrix=[[1, 2, 3, 4],
 [5, 6, 7, 8],
 [9, 10, 11, 12],
 [13, 14, 15, 16]]
print(matrix[2][1])
matrix[3][2]=0
print(matrix)
print(matrix[2])
for row in matrix:
    print(row[0])


Exercise 5:Create a list of the first 10 positive integers: [1, 2, 3, ..., 10].
Use slicing to create a new list containing the first 5 elements and print it.
Create another new list containing the last 5 elements of the original list and print it.
Reverse the original list and print it.
Use list comprehension to create a list that contains only the even numbers from the original list.

list=[1,2,3,4,5,6,7,8,9,10]
print(list[0:4])
print(list[5:9])
list.sort(reverse=True)
print(list)
new_list=[x for x in range(0,11,2)]
print(new_list)


Exercise 6:Start with the list: names = ["Alice", "Bob", "Charlie", "David", "Eve"].
Add the name "Frank" to the end of the list.
Insert the name "Grace" at the beginning of the list.
Remove "Charlie" from the list.
Find the index of "Eve" in the list and print it.
Sort the list alphabetically and print the result.

names= ["Alice", "Bob", "Charlie", "David", "Eve"]
names.append("Frank")
names.insert(0,"Grace")
print(names)
names.remove("Charlie")
print(names)
print(names.index("Eve"))
names.sort()
print(names)


Exercise 7:Create a list of numbers from 1 to 20.
Use a list comprehension to create a new list that contains the squares of only the odd numbers from the original list.
Create another list using list comprehension that filters out numbers divisible by both 2 and 3 from the original list.

numbers = list(range(1, 21))
odd_squares = [x*x for x in numbers if x % 2 != 0]
numbers_twothree = [x for x in numbers if x % 2 != 0 or x % 3 != 0]
print("Original numbers:", numbers)
print("Squares of odd numbers:", odd_squares)
print("Numbers not divisible by both 2 and 3:", numbers_twothree)


Exercise 8:Create two lists: list_a = [1, 2, 3] and list_b = [4, 5, 6].
Combine list_a and list_b into a new list called combined_list.
Add the number 7 to combined_list.
Use list slicing to create a new list that contains only the last three elements of combined_list.
Create a copy of combined_list and modify the copy without affecting the original.

list_a=[1,2,3]
list_b=[4,5,6]
combined_list=list_a+list_b
combined_list.append(7)
new_list=combined_list[4:7]
print(combined_list)
print(new_list)

Exercise 9:Given the sentence: "Python is a powerful and versatile programming language", split the sentence into a list of words.
Use list comprehension to create a new list that contains the length of each word in the sentence.
Sort the words in the sentence by their length and print the sorted list.
Join the sorted list of words back into a single string with spaces in between and print it.

sentence = "Python is a powerful and versatile programming language"
words = sentence.split()
word_lengths = [len(word) for word in words]
sorted_words = sorted(words, key=len)
sorted_sentence = " ".join(sorted_words)
print("Original list of words:", words)
print("List of word lengths:", word_lengths)
print("Sorted list of words by length:", sorted_words)
print("Sorted sentence:", sorted_sentence)

Exercise 10: Adding and Removing Items
Start with the colors list from Exercise 1.
Add a new color "orange" to the end of the list.
Insert the color "pink" at the second position (index 1) in the list.
Remove the color "green" from the list.
Remove the last item from the list using pop() and print the updated list.

colors=["red","blue","green","yellow"]
print(colors[0],colors[1])
colors[1]='purple'
print(colors)
colors.append("orange")
colors.insert(1,'pink')
colors.remove("green")
colors.pop()
print(colors)



Questions
1. Read and print elements of a list

n=int(input('Enter the no of elements you want to enter in a list')
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	number_list.append(number)
print(number_list)
	
2. Read and print negative numbers in a list
n=int(input('Enter the no of elements you want to enter in a list'))
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	number_list.append(number)
neg_number=[x for x in number_list if x<0]
print(neg_number)


3. Sum of all list elements
n=int(input('Enter the no of elements you want to enter in a list'))
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	sum=sum+number
	number_list.append(number)
print(sum)
print(number_list)

4.Maximum and minimum element of a list
n=int(input('Enter the no of elements you want to enter in a list'))
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	number_list.append(number)
print(max(number_list))
print(min(number_list))

5. 2nd largest no. in a list
n=int(input('Enter the no of elements you want to enter in a list'))
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	number_list.append(number)
number_list.sort()
print(number_list[-2])
print(number_list)

6.Total no. of even and odd nos. in a list
n=int(input('Enter the no of elements you want to enter in a list'))
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	number_list.append(number)
number_odd=[x for x in number_list if x%2==1]
number_even=[x for x in number_list if x%2==0]
print(len(number_odd))
print(len(number_even))

7. Total no of negative elements in a list
n=int(input('Enter the no of elements you want to enter in a list'))
number_list=[]
for i in range(n):
	number=float(input('Enter the no.'))
	number_list.append(number)
number_negative=[x for x in number_list if x<0]
print(len(number_negative))

8.Copy one list into another
n=int(input('Enter the no. of rows'))
number_list=[]
for i in range(n):
	number=float(input('enter the data'))
	number_list.append(number)
numbers=number_list
print(numbers)


9. Insert an element in a list
list=[1,2,3,4,5]
list.insert(0,9)
print(list)

10.Remove a specific element from the list
list=[1,2,3,4,5,9]
list.remove(9) ot list.pop()
print(list)

11.Frequency of each element in a list
n=int(input('Enter the no. of rows'))
number_list=[]
count=0
for i in range(n):
	number=float(input('enter the data'))
	if number in number_list:
		count=count+1
	number_list.append(number)
	print(count)
print(number_list)

12. Unique nos in a list> Use set 
n=int(input('Enter the no. of rows'))
number_list=[]
count=0
for i in range(n):
	number=float(input('enter the data'))
	number_list.append(number)
unique_numbers=list(set(number_list))
print(unique_numbers)

13. Total no of duplicate elements in a list

ASK doubt

14. merge 2 list into another
list_2=[1,2,3]
list_1=[4,5,6]
list_3=[7,8,9]
combined_list=list_1+list_2
list_final=combined_list+list_3
print(list_final)

15. Reverse of a list
list=[1,2,3,56,67]
list.sort(reverse=True)
print(list)

16. Search an element in the list
n=int(input('enter the no. of rows'))
k=int(input('enter the no. you want to search'))
number_list=[]
for i in range(n):
	number=float(input('enter the data'))
	if number==k:
		print('found',k)
	number_list.append(number)
print(number_list)

17. WAP to add 2 matrices

matrix_1=[[1,2,3],[4,5,6]]
matrix_2=[[9,8,7],[6,5,4]]
result=[]
for i in range(len(matrix_1)):
	row=[]
	for j in range(len(matrix_1[0])):
		row.append(matrix_1[i][j]+matrix_2[i][j])
	result.append(row)
print(result)

18. WAP to subtract 2 matrices
matrix_1=[[1,2,3],[4,5,6]]
matrix_2=[[9,8,7],[6,5,4]]
result=[]
for i in range(len(matrix_1)):
	row=[]
	for j in range(len(matrix_1[0])):
		row.append(matrix_1[i][j]-matrix_2[i][j])
	result.append(row)
print(result)

19. WAP to create and print a matrix
rows = int(input("Enter the number of rows: "))
columns = int(input("Enter the number of columns: "))
matrix = []
for i in range(rows):
    row = []
    for j in range(columns):
        value = int(input("enter the data"))
        row.append(value)
    matrix.append(row)
print("Your Matrix:")
for row in matrix:
    print(row)


nt= ((1,4), (2, 3), (4,6,7), (3,5))
x=[]
for data in nt:
    for j in data:
        x.append(j)
    print()
print(x)

Create a 2x3 Matrix: Create a matrix with 2 rows and 3 columns where the elements are numbers from 1 to 6.
matrix1=[[1,2,3],[4,5,6]
print(matrix1)
